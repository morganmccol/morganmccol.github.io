{"hash":"64edd28aacde67a1338f0189bc57a53ff07841e8","data":{"post":{"title":"Sketch to GitHub","path":"/sketch-to-git-hub/","date":"17. June 2020","timeToRead":2,"tags":[{"id":"tutorial","title":"tutorial","path":"/tag/tutorial/"},{"id":"software","title":"software","path":"/tag/software/"},{"id":"sketch","title":"sketch","path":"/tag/sketch/"}],"description":"","content":"<p><strong>Sketch to GitHub</strong> was a project I created to apply version control to individual Sketch files. This allowed us to handle merge conflicts and prevent file overrides when sharing files between multiple people.</p>\n<p>Version control was added through the use of two custom Bash scripts: one for downloading files from a GitHub repository and another for uploading files to the same repository.</p>\n<h2 id=\"downloading-sketch-files\"><a href=\"#downloading-sketch-files\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Downloading Sketch Files</h2>\n<p>This script used a <code>/sketch</code> folder inside the repository to rebuild and store updated Sketch files after download. It ran automatically using Git Hooks for <code>post-merge</code> and <code>post-pull</code>.</p>\n<p>The following workflow was performed:</p>\n<ol>\n<li>Remove all existing <code>.sketch</code> files from folder</li>\n<li>Export each Sketch directory from repository to its own <code>.zip</code> file</li>\n<li>Convert <code>.zip</code> file to <code>.sketch</code> file</li>\n<li>Remove leftover <code>.zip</code> files</li>\n</ol>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/sh</span>\n\n<span class=\"token assign-left variable\">directory</span><span class=\"token operator\">=</span><span class=\"token string\">\"sketch\"</span>\n<span class=\"token builtin class-name\">cd</span> <span class=\"token variable\">$directory</span>/\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"removing previous sketch files ...\"</span>\n<span class=\"token function\">rm</span> -rf -- *.sketch\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"exporting new sketch files ...\"</span>\n<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">file</span> <span class=\"token keyword\">in</span> *\n<span class=\"token keyword\">do</span>\n  <span class=\"token assign-left variable\">zip_file</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">${file<span class=\"token operator\">%</span>.*}</span>\"</span>\n\n  <span class=\"token comment\"># export sketch directory to zip file</span>\n  <span class=\"token builtin class-name\">cd</span> <span class=\"token variable\">$zip_file</span>/\n  <span class=\"token function\">zip</span> <span class=\"token variable\">$zip_file</span>.zip -r <span class=\"token builtin class-name\">.</span>\n\n  <span class=\"token comment\"># convert zip file to sketch file</span>\n  <span class=\"token function\">cp</span> <span class=\"token variable\">$zip_file</span>.zip <span class=\"token punctuation\">..</span>/<span class=\"token variable\">$zip_file</span>.sketch\n\n  <span class=\"token comment\"># remove files no longer needed</span>\n  <span class=\"token function\">rm</span> -rf <span class=\"token variable\">$zip_file</span>.zip\n  <span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span>\n<span class=\"token keyword\">done</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"done!\"</span></code></pre>\n<h2 id=\"uploading-sketch-files\"><a href=\"#uploading-sketch-files\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Uploading Sketch Files</h2>\n<p>This script used a <code>/sketch</code> folder inside the repository to prepare Sketch files for version control prior to upload. It would run automatically on unstaged files using a Git Hook for <code>pre-commit</code>.</p>\n<p>The following workflow was performed:</p>\n<ol>\n<li>Check for modified <code>.sketch</code> files and remove their associated Sketch directory</li>\n<li>Convert modified <code>.sketch</code> file to <code>.zip</code> file</li>\n<li>Export <code>.zip</code> file to Sketch directory</li>\n<li>Remove leftover <code>.zip</code> files, images previews, and text previews</li>\n<li>Prettify <code>.json</code> files for better version control</li>\n</ol>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/sh</span>\n\n<span class=\"token assign-left variable\">directory</span><span class=\"token operator\">=</span><span class=\"token string\">\"sketch\"</span>\n<span class=\"token builtin class-name\">cd</span> <span class=\"token variable\">$directory</span>/\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"checking for modified sketch files ...\"</span>\n<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">modified_sketch_file</span> <span class=\"token keyword\">in</span> *.sketch\n<span class=\"token keyword\">do</span>\n  <span class=\"token assign-left variable\">sketch_file</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">basename</span> $modified_sketch_file .sketch<span class=\"token variable\">)</span></span>\n\n  <span class=\"token comment\"># remove associated file directories</span>\n  <span class=\"token function\">rm</span> -rf -- <span class=\"token variable\">$sketch_file</span>/\n\n  <span class=\"token comment\"># convert sketch file to .zip file</span>\n  <span class=\"token function\">cp</span> <span class=\"token variable\">$sketch_file</span>.sketch <span class=\"token variable\">$sketch_file</span>.zip\n\n  <span class=\"token comment\"># export zip file to Sketch directory</span>\n  <span class=\"token function\">unzip</span> -o <span class=\"token variable\">$sketch_file</span>.zip -d <span class=\"token variable\">$sketch_file</span>/\n\n  <span class=\"token comment\"># remove files no longer needed</span>\n  <span class=\"token function\">rm</span> -rf <span class=\"token variable\">$sketch_file</span>.zip\n  <span class=\"token function\">rm</span> -rf <span class=\"token variable\">$sketch_file</span>/previews/\n  <span class=\"token function\">rm</span> -rf <span class=\"token variable\">$sketch_file</span>/text-previews/\n<span class=\"token keyword\">done</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"cleaning up json files ...\"</span>\n<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">modified_json_file</span> <span class=\"token keyword\">in</span> /*.json\n<span class=\"token keyword\">do</span>\n  <span class=\"token assign-left variable\">json_file</span><span class=\"token operator\">=</span><span class=\"token variable\">${modified_json_file<span class=\"token operator\">/</span>sketch<span class=\"token operator\">/</span>.}</span>\n\n  <span class=\"token comment\"># prettify json files</span>\n  python3 -m json.tool --sort-keys <span class=\"token string\">\"<span class=\"token variable\">$json_file</span>\"</span> <span class=\"token string\">\"<span class=\"token variable\">$json_file</span>\"</span>.pretty\n  <span class=\"token function\">mv</span> <span class=\"token string\">\"<span class=\"token variable\">$json_file</span>\"</span>.pretty <span class=\"token string\">\"<span class=\"token variable\">$json_file</span>\"</span>\n<span class=\"token keyword\">done</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"done!\"</span></code></pre>\n","cover_image":{"type":"image","mimeType":"image/png","src":"/assets/static/sketch.07cc2b7.75b7ce7762316f60aad2f0a27d973232.png","size":{"width":860,"height":484},"sizes":"(max-width: 860px) 100vw, 860px","srcset":["/assets/static/sketch.a67b0b2.75b7ce7762316f60aad2f0a27d973232.png 480w","/assets/static/sketch.07cc2b7.75b7ce7762316f60aad2f0a27d973232.png 860w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 860 484' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-47ae3b36ccf92f56859cc0077f773438'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='10'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-47ae3b36ccf92f56859cc0077f773438)' width='860' height='484' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAkCAYAAAA5DDySAAAACXBIWXMAAAsTAAALEwEAmpwYAAAGWElEQVRo3u1Z7U%2bTVxTnP9nH7cP%2bh33ahy3bzJJ90SWLiVmiy7b4wSxzW5a5qDNLnO%2biUxFQEQTlHXlxvLVAS3kpfaMtbaFQoby1RRBBee5v5577tIXSYlmYYuyHk/vSe%2b5zz%2b/8zjk3t3mIDuNtlrwcADkAcgDkAMgBsE0REVeizVbWr39jAEh38I2tB4h5lUTdSYn59f6w3nrV%2bl1m/CYANhrqJLHrbToveiBmzRBhA8SMCWJuiMRGcwMQjxtVf550Z630e8%2bbxQA%2bZMwHLE7q3vQogyMO3Qi7WjfTDREiYydqoE12knRBm%2bqC8BdgzV8HbcJAYwIn1MDeF%2bsYtIsZ4CSjRyAmyTD7EWqbyaCrEONlBEhYrX0yASwEycNDwPwgjcfV3HIEInCNdB4CTyPQHneq9XI/2b4JIRBvNeMHCoBpI4TtMMTIGQKhXNHdfZxoXgfh%2bhVa94cEBNHc/QfEaAGE4yg006cEWj7pWqCFTZwHUnPI/ybx/VMScCbwMzDARwafhWb%2bjAythRg%2bBq3tfQjfJQjnT2TgJ9D69kGzHoKwfgPhPQ3Nspfi3UIA/Aht4ADp7qHQeEAA9G04zKsQ6HYkJTP46RkwTwksVM1e1Xo%2bghj6FlrLO2o8%2bDW03i8gxooImONssHCfJDAOUhiECBACxX8FGumIsWJo01ZOjIh5VBi8AuFcEw0QEF5u4%2bEnsg0B7g//Tl7%2bkr0oxm4RE%2bqJFecVMDIkAtcpHLrYcA4HabD7BIVBIelUEgh/Q0y10Ee9lBypUszbVRKNuhJMU0nVuYOi9oOU6TL6Zi234O%2bmD4O8TLUfT4KU6EbJcwFVEWSt57FPtVEvJzc151WJUFYMOZYJca6fgHhIITCANaoGa/5yaMEq1Z%2bgihEkQMerqUqY9erR/d%2bF9Wmf8SpglvohI1Yq3oPW/zG179K3HtG5fAqcbJOgQtOxJdJJT6r1rCsND7eqxMh3A/L8vEOX1L593R47IPqeWAhgpfMklq/k4Vn7bxDSietyQVYM2JhQXGnHqddhTp5kvEaJUZMVJHgHghjBh0vEZhqJ6JLaj6b0s5CEDUvExEgXleMAtIiczyIHbCqFdJNbm3NumXHlmqQelbs5K%2bcB%2bC8AU01MPflxdR9II4l5/eos29R%2bbDhL0cvt4ggWJyxoqixCJEBleMmXOOe2AMBTOvzqGMW0d%2bPBFjxqTvaXRnjzBBjyNzJ6ZdaNlRkXVqdtWJ2x43lasRHADjyftWOF1smW18s%2b/b5Kv/P8jC2D/sa9VsI2PuPy5CB%2bOXIQ%2b/fuwQ/fH0B0zEzn9WRXBhN0XvTCZa5H04MbmPYa0dd%2bHwvjFmbEnL%2bH5rrwYtYB30AzAeVXe7wYh9VQhSl3B4JOA9yWh%2bhtr8aEs4NypIUPEh3r1cWMWNCCsMeA7kcVcJgayHAr7D0NGDDUkjGDGLW1wtRaRevW622WWJDaURM6m8rZAaaWUhw%2b9BXoQAxE/b2roMzLZ38pA9iLy344empx4%2bIJuEz1eDzcAVtXDarvXsad66fRXHkD7XW3MOPrRmH%2bKYw72hChA0yRMbVlV1Bw6SQGOyt5v8RHmRluJZJJBPCzKasCVWdQ3Et8hieepP563S1EOiTOgGNHv0NXUwn27/ucAZJ7ZMUASUm8COL%2brQtwmurg7W%2bE%2bZ97eHD7IsqLzqOmNJ/HZ0/9zMaXFvyFe4XnEBh6hKqSy7yuubIAJQSUi/QlmPEQSRXJJJU83ZvvIRkSbTZvDtJYCZwEV4IhwRbZXoUZ/ZVRGBtLUFF8Hr2t5cg/cwz3iy9QOFxHa00RupvvMgum3AYUX/2TgDmHjobbzI7Sm2cYIAmg1ViVFgDprWXd%2b3HPZHp7SPbTX2W3erNg5sTc2V%2bFUzeUxpbdPEssaMKQsZop3lBxjUGZcLYxheW8t6%2bRDe9rq6C4b2AWtNUVczZm78aTJlNZGTzr71Zs28F3gozleYtvZLwI8Rx5T5YQmenZGBmX3PcmYpTn5ViulVVD9olBEqCAtQVLoX6EKYnKnBAZNXM8Suo/Cw%2b91Duv5UEk9R6QlGTd1zbcA1w8Xr9W6oc9Rs7QcvyU4jDkak%2bUNl6zC4zf%2bkVom4%2bem2IwTvn4hSYeDikJ73U/k%2b3os/h2MvdueSPM/S%2bQAyAHQA6AHAA5AN5i%2bReR1WdoIwo8swAAAABJRU5ErkJggg==' /%3e%3c/svg%3e"}}},"context":{}}